// Aplicação com Vetor Não Ordenado e com Repetições
unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Grids, Vcl.DBGrids,
  Vcl.StdCtrls, Vcl.ExtCtrls;

type
  TForm1 = class(TForm)
    Panel1: TPanel;
    Panel2: TPanel;
    btn1Incluir: TButton;
    btn2Excluir: TButton;
    btn3Limpar: TButton;
    btn4Fechar: TButton;
    pos1: TEdit;
    pos2: TEdit;
    pos3: TEdit;
    pos4: TEdit;
    pos5: TEdit;
    pos6: TEdit;
    pos7: TEdit;
    pos8: TEdit;
    pos9: TEdit;
    pos10: TEdit;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    procedure FormActivate(Sender: TObject);
    procedure btn1IncluirClick(Sender: TObject);
    procedure btn2ExcluirClick(Sender: TObject);
    procedure btn3LimparClick(Sender: TObject);
    procedure btn4FecharClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  // vetor com identifiar VET, dez posições e armazenando números
  // do tipo inteiro
  vet:array[1..10] of integer;

  // variável com identificar NUMERO que receberá os números a serem
  // inseridos
  numero: integer;

  // variável com identificador PL que mostra a próxima posição livre
  pl: integer;


implementation

{$R *.dfm}

procedure TForm1.btn1IncluirClick(Sender: TObject);
var
  i, achou: integer;
  num: String;
  j: Integer;
begin
  // verifica se o Vetor está cheio, ou seja, se está com as dez
  // posições ocupadas
  if pl = 11 then
    showmessage('O vetor está cheio, ou seja, com as dez poisições ocupadas!')
  else
  begin
    // recebe o número a ser inserido no vetor
    num := InputBox('Aplicação 4 - Vetores', 'Digite o número a ser incluído','');
    if num <> '' then
      begin
        numero := StrToInt(num);

        // verifica em qual posição o número deve ser incluído
        // respeintando a ordenação crescente
         if pl = 1 then
         begin
           // coloca o número digitado na primeira posição
           // do vetor, pois este está vazio
           vet[pl] := numero;
           pos1.Text := '';
           pos1.Text := IntToStr(numero);

        // atualiza a posição livre após a inclusão do novo número
           pl := pl + 1;

        // mostra a nova posição livre
            posLivre.Text := IntToStr(pl);
         end
         else
         begin
         // verifica se o número a ser incluído já existe no vetor
         // pois não é permitida a repetição de números
            achou := 0;
            for i := 1 to pl - 1 do
            begin
               if vet[i] = numero then
                  achou := 1;
               end;
               if achou = 1 then
               begin
                  // a variável ACHOU marca que o número já existe
                  // logo não poderá ser incluído
                  ShowMessage('Este número já existe no vetor, logo, não poderá ser incluído!');
               end
               else
               begin
                  // busca a posição para inclusão, procurando nas posições
                  // ocupadas com números menores ou iguais ao número
                  // que se deseja incluir
                  i := 1;

                  // a variável ACHOU marca posição onde a inclusão ocorrerá
                  achou := pl;

                  while (i <= (pl - 1)) and (achou = pl) do
                  begin
                     if vet[i] > numero then
                        achou := i
                     else
                     i := i + 1;
                  end;
                  // fazendo o deslocamento para que a inclusão seja realizada na
                  // posição correta, este deslocamento só acontece
                  // se o novo número for incluído entre números já existentes
                  if achou < pl then
                  begin
                     for i := pl downto achou + 1 do
                        begin
                           vet[i] := vet[i + 1];
                        end;
                  end;
                  // fazendo o armazenamento físico no vetor
                  vet[achou] := numero;

                  // atualizado os números da tela de acordo com o vetor
                  if pl = 1 then
                     pos1.Text := '';
                  if pl = 2 then
                     pos2.Text := '';
                  if pl = 3 then
                     pos4.Text := '';
                  if pl = 4 then
                     pos4.Text := '';
                  if pl = 5 then
                     pos5.Text := '';
                  if pl = 6 then
                     pos6.Text := '';
                  if pl = 7 then
                     pos7.Text := '';
                  if pl = 8 then
                     pos8.Text := '';
                  if pl = 9 then
                     pos9.Text := '';
                  if pl = 10 then
                     pos10.Text := '';
                  for j := 1 to pl do
                  begin
                     if j = 1 then
                     pos1.Text := IntToStr(vet[j]);
                     if j = 2 then
                     pos2.Text := IntToStr(vet[j]);
                     if j = 3 then
                     pos3.Text := IntToStr(vet[j]);
                     if j = 4 then
                     pos4.Text := IntToStr(vet[j]);
                     if j = 5 then
                     pos5.Text := IntToStr(vet[j]);
                     if j = 6 then
                     pos6.Text := IntToStr(vet[j]);
                     if j = 7 then
                     pos7.Text := IntToStr(vet[j]);
                     if j = 8 then
                     pos8.Text := IntToStr(vet[j]);
                     if j = 9 then
                     pos9.Text := IntToStr(vet[j]);
                     if j = 10 then
                     pos10.Text := IntToStr(vet[j]);
                  end;

                     // atualiza a posição livre após a inclusão do novo
                     // número
                     pl := pl + 1;

                    // mostra a nova posição livre
                    posLivre.Text := IntToStr(pl);
               end;
         end;
      end;
  end;
end;

procedure TForm1.btn2ExcluirClick(Sender: TObject);
var
  i, j, achou, encontrou: Integer;
    num: String;
begin
  // verifica se o vetor está vazio, ou seja,
  // se a próxima posição livre é a 1.
  if pl = 1 then
    ShowMessage('O vetor está vazio, logo, nenhum número poderá ser excluído!')
  else
  begin
    // a variável ENCONTROU verifica a existência de
    // pelo menos uma ocorrência do número digitado no vetor
    encontrou := 0;

    // receb o número a ser escluído do vetor
    num := InputBox('Aplicação 1 - Vetores', 'Digite o número a ser excluído', '');
    if num <> '' then
    begin
      numero := StrToInt(num);

        // percorre todas as posições ocupadas do vetor
        // para verificar se o número a ser exclupido existe
        // caso o número exista poderá ocorrer
        // o deslocamento de posições no vetor
      i := 1;
      achou := 0;
      while (i < pl) and (vet[i] <= numero) do
      begin
        if vet[i] = numero then
        begin
            // marca a existência do número a ser exluído
          encontrou := 1;

            // realiza o deslocamento
          for j := i to pl - 2 do
          begin
              vet[j] := vet[j + 1];
          end;
          i := 1;
          achou := 1;
          end
          else
          i := i + 1;

        if achou = 1 then
        begin
            achou := 0;
          if pl = 2
          then pos1.Text := '';
          if pl = 3
          then pos2.Text := '';
          if pl = 4
          then pos3.Text := '';
          if pl = 5
          then pos4.Text := '';
          if pl = 6
          then pos5.Text := '';
          if pl = 7
          then pos6.Text := '';
          if pl = 8
          then pos7.Text := '';
          if pl = 9
          then pos8.Text := '';
          if pl = 10
          then pos9.Text := '';
          if pl = 11
          then pos10.Text := '';
          // atualiza o valor da posição livre
          pl := pl - 1;
          posLivre.Text := IntToStr(pl);

        // atualizando os números na tela
        for j := 1 to pl -1 do
          begin
            if j = 1
            then pos1.Text := IntToStr(vet[j]);
            if j = 2
            then pos2.Text := IntToStr(vet[j]);
            if j = 3
            then pos3.Text := IntToStr(vet[j]);
            if j = 4
            then pos4.Text := IntToStr(vet[j]);
            if j = 5
            then pos5.Text := IntToStr(vet[j]);
            if j = 6
            then pos6.Text := IntToStr(vet[j]);
            if j = 7
            then pos7.Text := IntToStr(vet[j]);
            if j = 8
            then pos8.Text := IntToStr(vet[j]);
            if j = 9
            then pos9.Text := IntToStr(vet[j]);
             if j = 10
            then pos10.Text := IntToStr(vet[j]);
          end;
         end;
      end;
      if encontrou = 0 then
         ShowMessage('O número digitado para exclusão não existe no vetor!');
    end;
  end;
end;

procedure TForm1.btn3LimparClick(Sender: TObject);
begin
   // mostrando no Edit denominda posLivre a posição 1, ou seja,
   // esvaziando o vetor
   posLivre.Text := '1';

   // colocando o valor 1 na variável PL que representa
   // a posição livre quando o vetor está vazio
   pl := 1;

   // limpa os números antriormente incluídos
   pos1.Text := '';
   pos2.Text := '';
   pos3.Text := '';
   pos4.Text := '';
   pos5.Text := '';
   pos6.Text := '';
   pos7.Text := '';
   pos8.Text := '';
   pos9.Text := '';
   pos10.Text := '';
end;

procedure TForm1.btn4FecharClick(Sender: TObject);
begin
   // fechar o formulário
   Close;
end;

procedure TForm1.FormActivate(Sender: TObject);
begin
  // mostrando no edit denominado posLivre a posição 1,
  //pois o vetor está vazio
  posLivre.Text := '1';

  // colocando o valor 1 na variável PL que representa
  // a posição livre quando o vetor está vazio
  pl := 1;
end;

end.
