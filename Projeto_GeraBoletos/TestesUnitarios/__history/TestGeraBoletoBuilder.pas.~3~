unit TestGeraBoletoBuilder;

interface

uses
  TestFramework,
  GeraBoleto.Boleto,
  SysUtils;

type
  TestTGeraBoletoBuilder = class(TTestCase)
    strict private
      FBoleto: IBoleto;
    private
      procedure SetDadosPadrao;
    public
      procedure SetUp; override;
      procedure TearDown; override;
    published
    // aqui onde são criados procedimenos de teste
      procedure TestValidaCodigoDeBarras;
  end;

implementation

uses
  GeraBoleto.Conta, GeraBoleto.Titulo;

{ TestTGeraBoletoBuilder }

procedure TestTGeraBoletoBuilder.SetDadosPadrao;
var
  Conta: TConta;
  Titulo: TTitulo;
begin
  Conta := FBoleto.GetConta;
  Conta.Banco.Numero       := '001';
  Conta.Banco.DigitoNumero := '9';
  Conta.Agencia            := '9999';
  Conta.DigitoAgencia      := '123456';
  Conta.DigitoConta        := 1;
  Conta.Carteira           := '17';

  Titulo := FBoleto.GetTitulo;
  Titulo.Emissao    := StrToDate('1/1/2019');
  Titulo.Vencto     := StrToDate('30/05/2019');
  Titulo.EspecMoeda := '9';
  Titulo.EspecDoc   := 'DM';
  Titulo.Aceite     := 'N';
  Titulo.DataProc   := StrToDate('1/1/2019');
  Titulo.Valor      := 300.00;
end;

procedure TestTGeraBoletoBuilder.SetUp;
begin
  FBoleto := TBoleto.Create;
  SetDadosPadrao;

end;

procedure TestTGeraBoletoBuilder.TearDown;
begin
//
end;

procedure TestTGeraBoletoBuilder.TestValidaCodigoDeBarras;
begin
  FBoleto.Gerar;
  CheckEquals('00196790500000300000000001234567000000000117',  FBoleto.GetCodigoBarras, 'Código de Barras inválido!');
end;

initialization
  RegisterTest(TestTGeraBoletoBuilder.Suite);

end.
