unit uFrm_ConsultaCadastro;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Datasnap.DBClient,
  Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Grids, Vcl.DBGrids, System.ImageList,
  Vcl.ImgList;

type
  Tfrm_ConsultaCadastro = class(TForm)
    Panel1: TPanel;
    lbl_Sistema: TLabel;
    lbl_Matriz: TLabel;
    lbl_Mostrahora: TLabel;
    lbl_CidadeGrau: TLabel;
    lbl_MostraData: TLabel;
    Panel2: TPanel;
    Panel3: TPanel;
    Panel4: TPanel;
    Label1: TLabel;
    RadioGroup1: TRadioGroup;
    ds_Consulta: TDataSource;
    dbg_ConsultaCadastro: TDBGrid;
    btn_Limpar: TButton;
    btn6_Imprimir: TButton;
    brn7_FecharFrom: TButton;
    img_Cadastro: TImageList;
    lbl_Cadastrados: TLabel;
    Timer1: TTimer;
    cds_ConsultaCadastro: TClientDataSet;
    cds_ConsultaCadastroCDFICHA: TIntegerField;
    cds_ConsultaCadastroNOME: TStringField;
    cds_ConsultaCadastroDT_NASC: TDateField;
    cds_ConsultaCadastroFONE_MOVEL: TStringField;
    cds_ConsultaCadastroSITUACAO: TStringField;
    procedure FormShow(Sender: TObject);
    procedure RadioGroup1Click(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure brn7_FecharFromClick(Sender: TObject);
    procedure btn6_ImprimirClick(Sender: TObject);
    procedure dbg_ConsultaCadastroDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frm_ConsultaCadastro: Tfrm_ConsultaCadastro;

implementation

{$R *.dfm}

uses uDM_Dados, uDM_Relatorios, uFuncoes;

procedure Tfrm_ConsultaCadastro.brn7_FecharFromClick(Sender: TObject);
begin
  Close;
end;

procedure Tfrm_ConsultaCadastro.btn6_ImprimirClick(Sender: TObject);
begin
  with DM_Relatorios do
  begin
    DM_Relatorios := TDM_Relatorios.Create(nil);
    try
      rel_Cadastro.Clear;
      rel_Cadastro.LoadFromFile(ExtractFilePath(Application.ExeName)+'Relatorios\rel_Cadastro.fr3');
      rel_Cadastro.ShowReport();
    finally
      FreeAndNil(DM_Relatorios);
    end;
  end;

end;



procedure Tfrm_ConsultaCadastro.dbg_ConsultaCadastroDrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin
  ZebrarDBGrid(ds_Consulta,dbg_ConsultaCadastro,State,Rect,Column);
  dbg_ConsultaCadastro.Font.Size := 11;
end;


procedure Tfrm_ConsultaCadastro.FormShow(Sender: TObject);
begin
  with TClientDataSet(ds_Consulta.DataSet) do
  begin
    Close;
 //   CommandText := 'select * from TBL_PLANDADOS';
    Open;
  end;
end;


procedure Tfrm_ConsultaCadastro.RadioGroup1Click(Sender: TObject);
begin

  with TClientDataSet(ds_Consulta.DataSet) do
  begin
    If (RadioGroup1.ItemIndex = 0) then
    begin
      Close;
      CommandText := '';
      CommandText := 'SELECT * FROM TBL_PLANDADOS order by CDFICHA';
      Open;
    end;

    If (RadioGroup1.ItemIndex = 1) then
    begin
      Close;
      CommandText := '';
      CommandText := 'SELECT * FROM TBL_PLANDADOS order by NOME';
      Open;

    DM_Relatorios := TDM_Relatorios.Create(nil);
    try
      DM_Relatorios.rel_Cadastro.Clear;
      DM_Relatorios.rel_Cadastro.LoadFromFile(ExtractFilePath(Application.ExeName)+'Relatorios\rel_Cadastro.fr3');
      DM_Relatorios.rel_Cadastro.ShowReport();
    finally
      FreeAndNil(DM_Relatorios);
    end;
    end;
  end;
end;


procedure Tfrm_ConsultaCadastro.Timer1Timer(Sender: TObject);
var
  MostraHora, MostraData : TDateTime;
  strHora : string;
  strData : String;
begin
  MostraHora := Time; // armazena date e hora atuais
  strHora    := TimeToStr(MostraHora); // converte a hora em uma string
  lbl_MostraHora.Caption := strHora; // exibe a hora na legenda do formulário

  MostraData := Date;
  strData := DateToStr(MostraData);
  lbl_MostraData.Caption := strData;

end;

end.
